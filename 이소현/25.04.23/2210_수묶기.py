"""
수 묶기

문제
길이가 N인 수열이 주어졌을 때, 그 수열의 합을 구하려고 한다. 하지만, 그냥 그 수열의 합을 모두 더해서 구하는 것이 아니라, 수열의 두 수를 묶으려고 한다. 어떤 수를 묶으려고 할 때, 위치에 상관없이 묶을 수 있다. 하지만, 같은 위치에 있는 수(자기 자신)를 묶는 것은 불가능하다. 그리고 어떤 수를 묶게 되면, 수열의 합을 구할 때 묶은 수는 서로 곱한 후에 더한다.

예를 들면, 어떤 수열이 {0, 1, 2, 4, 3, 5}일 때, 그냥 이 수열의 합을 구하면 0+1+2+4+3+5 = 15이다. 하지만, 2와 3을 묶고, 4와 5를 묶게 되면, 0+1+(2*3)+(4*5) = 27이 되어 최대가 된다.

수열의 모든 수는 단 한번만 묶거나, 아니면 묶지 않아야한다.

수열이 주어졌을 때, 수열의 각 수를 적절히 묶었을 때, 그 합이 최대가 되게 하는 프로그램을 작성하시오.

입력
첫째 줄에 수열의 크기 N이 주어진다. N은 50보다 작은 자연수이다. 둘째 줄부터 N개의 줄에 수열의 각 수가 주어진다. 수열의 수는 -1,000보다 크거나 같고, 1,000보다 작거나 같은 정수이다.

출력
수를 합이 최대가 나오게 묶었을 때 합을 출력한다. 정답은 항상 231보다 작다.

예제 입력 1 
4
-1
2
1
3
예제 출력 1 
6
예제 입력 2 
6
0
1
2
4
3
5
예제 출력 2 
27
예제 입력 3 
1
-1
예제 출력 3 
-1
예제 입력 4 
3
-1
0
1
예제 출력 4 
1
예제 입력 5 
2
1
1
예제 출력 5 
2

"""
#GPT 풀이
n = int(input())
nums = [int(input()) for _ in range(n)]

# 그리디 분류
pos = []     # 2 이상 양수
neg = []     # 음수
ones = 0     # 1
zero = 0     # 0
result = 0

# 분류
for num in nums:
    if num > 1:
        pos.append(num)
    elif num == 1:
        ones += 1
    elif num == 0:
        zero += 1
    else:
        neg.append(num)

# 양수: 큰 수부터 정렬
pos.sort(reverse=True)
# 음수: 작은 수부터 정렬 (음수일수록 작을수록 좋음)
neg.sort()

# 양수끼리 묶기
for i in range(0, len(pos) - 1, 2):
    result += pos[i] * pos[i + 1]
# 남는 하나는 그냥 더함
if len(pos) % 2 == 1:
    result += pos[-1]

# 음수끼리 묶기
for i in range(0, len(neg) - 1, 2):
    result += neg[i] * neg[i + 1]
# 남는 음수 하나가 있을 때
if len(neg) % 2 == 1:
    if zero > 0:
        # 0과 곱해서 없애버림 (추가 안 함)
        pass
    else:
        result += neg[-1]

# 1은 무조건 더함 (곱하면 손해)
result += ones

print(result)


